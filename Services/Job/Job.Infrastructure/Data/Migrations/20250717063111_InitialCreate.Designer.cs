// <auto-generated />
using System;
using Job.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Job.Infrastructure.Migrations
{
    [DbContext(typeof(HikruDbContext))]
    [Migration("20250717063111_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);


            modelBuilder.Entity("Job.Domain.Models.Department", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("Job.Domain.Models.Position", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<DateOnly?>("ClosingDate")
                        .HasColumnType("date");

                    b.Property<decimal>("DepartmentId")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RecruiterId")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("Job.Domain.Models.Recruiter", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Recruiter", (string)null);
                });

            modelBuilder.Entity("Job.Domain.Models.Position", b =>
                {
                    b.HasOne("Job.Domain.Models.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Position_Department");

                    b.HasOne("Job.Domain.Models.Recruiter", "Recruiter")
                        .WithMany("Positions")
                        .HasForeignKey("RecruiterId")
                        .IsRequired()
                        .HasConstraintName("FK_Position_Recruiter");

                    b.Navigation("Department");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("Job.Domain.Models.Department", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Job.Domain.Models.Recruiter", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
